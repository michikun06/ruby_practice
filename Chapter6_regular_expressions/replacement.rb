# 学ぶこと
# ?、 .、 +、*、\w、[^AB] の意味
# ( ) を利用したキャプチャと置換
# (?: ) を利用したキャプチャ無しのグループ化
# 特別な文字のエスケープ
# + や * を使用する際の注意点


# 例文
text = <<-TEXT
クープバゲットのパンは美味しかった。
今日はクープ バゲットさんに行きました。
クープ　バゲットのパンは最高。
ジャムおじさんのパン、ジャムが入ってた。
また行きたいです。クープ・バゲット。
クープ・バケットのパン、売り切れだった（><）
TEXT

puts text.split(/\n/).grep(/クープ.?バ[ゲケ]ット/)


puts "-------------------------------------"


# 例文
html = <<-HTML
<select name="game_console">
<option value="none"></option>
<option value="wii_u" selected>Wii U</option>
<option value="ps4">プレステ4</option>
<option value="gb">ゲームボーイ</option>
</select>
HTML
replaced = html.gsub(/<option value="(\w+)"(?: selected)?>(.*)<\/option>/, '\1,\2')

puts replaced


# 重要： * と + は「貪欲」であることに注意！


# ? は「直前の文字が1個、または無し」を表す
# . は「任意の1文字」を表す
# + は「直前の文字が1個以上」を表す
# * は「直前の文字が0個以上」を表す
# ( ) はマッチする部分をキャプチャ（捕捉）する
# キャプチャした部分は置換するときに $1 や \1 で参照できる
# \w は「英単語を構成する文字（半角英数字とアンダースコア）」を表す
# [^AB] は「AでもなくBでもない任意の1文字」を表す
# 正規表現中の特別な文字は \ でエスケープする
# ( ) はキャプチャだけでなく、グループ化にも使われる
# (ABC)? は「文字列 ABC があり、または無し」を表す
# (?: ) はキャプチャ無しでグループ化する場合に使う
# * と + は「貪欲」で最長マッチを返すため、使い方を誤ると思いがけない結果が返る
# *? や +? にすると、最短マッチを返す
# テキストエディタで重要なテキストを置換する際は、ひとつずつ確認しながら置換する