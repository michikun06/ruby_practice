# Rubyは人間が自然に理解しやすい形式で数値を作ることができる。

# 数値には「_」を入れることができるがプログラムには無視される
puts 1000_222_444_4444_4444

# 整数同士の割り算は整数になることに注意する。小数点以下を表示したい場合は「.0」のようにどちらかを表示する。もしくはto_fメソッドを使用
puts 1 / 2   #=>0
puts 1 / 2.0   #=>0.5

# 演算子による比較
puts 1 < 2   #=>true

# 演算子の優先順位
## 四則演算は数学と同じ。（）を用いることで変更可能
## 他にも::や[]などの演算子があり、優先順位が決まっている。

# 加算代入について
## rubyには「++」のような演算子は存在しない以下のようにする(加減乗除同様にできる)
n = 1
puts n += 1

# ※rubyは暗黙的に型変換を行わないので注意「to_i」や「to_f」などのメソッドを使って、文字列や数値を変換する
# ※NumericクラスとStringクラスは連結するkとおができない。Stringクラスに変換してから連結する必要がある。
# ※丸め誤差 : Rubyは10進数ではなく二進数で計算するため、思わぬバグが発生することがある。例えば
puts 0.1 * 3 == 0.3   #=> false
# これの対策はRational（有理数）クラスを使用する(変数に入っている場合はrationaliseメソッドを使用)
puts 0.1r * 3r == 0.3   #=> true




